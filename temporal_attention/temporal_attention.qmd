---
title: Cueing Temporal Attention
knitr:
  opts_chunk: 
    echo: false
    message: false
    warning: false
    comment: NA
    cache: false
    fig.width: 7
    fig.asp: 0.5
    fig.path: "figures/"
    dpi: 320
    external: false
    res: 320
    results: "hide"
    out.width: 100%
    split: false 
    tidy: false
    dev: svg
editor_options: 
  chunk_output_type: console
format: 
  html: 
    embed-resources: true
---


```{r setup}
library(httr)
library(apastats)
library(data.table)
library(jsonlite)
library(stringr)
library(knitr)
library(patchwork)
library(Hmisc)
library(superb)
library(ez)
library(circhelp)

default_font = 'Gill Sans Nova Light'

default_font_size <- 10
default_line_size <- 1/.pt/3.82*4 
default_font_size_mm <- default_font_size/ggplot2:::.pt

default_point_size <- 4*default_line_size

update_geom_defaults("line", list(linewidth = default_line_size))
update_geom_defaults("text", list(size = default_font_size_mm, family = default_font))
update_geom_defaults("segment", list(linewidth = default_line_size))
update_geom_defaults("pointrange", list(linewidth = default_line_size))
update_geom_defaults("vline", list(linewidth = default_line_size, colour = '#AFABAB'))
update_geom_defaults("hline", list(linewidth = default_line_size, colour = '#AFABAB'))
update_geom_defaults('function', list(linewidth = default_line_size))

default_theme<-theme_light(base_size = default_font_size, base_line_size = default_line_size, base_family = default_font)+theme(
  axis.line=element_line(linewidth = I(0.5)), 
  axis.ticks= element_line(linewidth = I(0.25), colour = 'gray'),
  axis.line.x=element_line(),
  axis.line.y=element_line(),
  panel.grid.major = element_blank(), 
  panel.grid.minor = element_blank(),
  legend.title=element_text(size=rel(1)), 
  strip.text=element_text(size=rel(1), colour = 'black'), 
  axis.text=element_text(size=rel(0.9), colour = '#4e4e4e'), 
  axis.title=element_text(size=rel(1), colour = '#4e4e4e'), 
  panel.border= element_blank(),
  strip.background = element_blank(),
  legend.position	='right', 
  legend.key.height = unit(0.7, 'lines'),
  plot.title=element_text(size=rel(1), hjust = 0.5),
  plot.tag.position = c(0,1),
  plot.background = element_blank(),
  text=element_text(size=default_font_size), 
  legend.text=element_text(size=rel(1)), 
  axis.line.x.bottom = element_blank(), 
  axis.line.y.left = element_blank(),
  axis.line.x.top = element_blank(),
  axis.line.y.right = element_blank())
theme_set(default_theme)

default_colors <-c('#3498db','#009f06','#FF7F00', '#7A378B','#f72034')
scale_colour_discrete <- function(...) scale_colour_manual(values=default_colors, ...)
scale_fill_discrete <- function(...) scale_fill_manual(values=default_colors, ...)
scale_shape_discrete <- function(...) scale_shape_manual(values = c(16,21,17, 22), ...)


gg_crosshair <- function(xint = 0, yint = 0, lty = 2) {
  if (!is.null(xint)) gv = geom_vline(xintercept = xint, linetype = lty)
  else gv = NULL
  if (!is.null(yint)) gh = geom_hline(yintercept = yint, linetype = lty)
  else gh = NULL
  
  list(gv, gh)
}
headers = c(
  `Authorization` = sprintf("Bearer %s", Sys.getenv("JATOS_TOKEN"))
)

jatos_url <- 'https://jatos.mindprobe.eu/jatos/api/v1/'

randstring <- function(n = 5000) {
  a <- do.call(paste0, replicate(5, sample(LETTERS, n, TRUE), FALSE))
  paste0(a, sprintf("%04d", sample(9999, n, TRUE)), sample(LETTERS, n, TRUE))
}

data_list <- list()
study_uid <- Sys.getenv('JATOS_TEMP_ATT_STUDY_UID')

temp_dir <- tempdir(check = T)
temp_dir <- gsub('\\\\', '/', temp_dir)
temp_dir <- paste(temp_dir, randstring(1), sep = '/')
res_file <- paste0(tempfile(),'.zip')

url <-  sprintf("%sresults?studyUuid=%s", jatos_url, study_uid)
system(sprintf('curl -i -H "Authorization: %s" %s --output "%s"', headers[['Authorization']], url, res_file))
unzip(res_file, exdir=temp_dir)  # unzip your file


metadata <- jsonlite::fromJSON(list.files(temp_dir, '*.json', full.names = T, recursive = T))$data$studyResults[[1]]

finished_study_ids <- metadata[,c('id', "endDate", "startDate")]
setDT(finished_study_ids)
finished_study_ids[,id:=as.character(id)]
finished_study_ids[,endDate:=as.POSIXct(endDate/1000, origin="1970-01-01")]
finished_study_ids[,startDate:=as.POSIXct(startDate/1000, origin="1970-01-01")]

comp_res_meta <- rbindlist(lapply(1:length(metadata$componentResults), \(x) {
  dt <- as.data.table(metadata$componentResults[[x]])
  dt
}), fill = T)

flist <- list.files(temp_dir, '*.txt', full.names = T, recursive = T)
flist <- flist[str_extract(flist,'study_result_(\\d+)', group = 1)%in%finished_study_ids$id]

data <- suppressWarnings(rbindlist(lapply(c(flist), \(x){
  print(x)
  comp_res_id <- str_extract(x, '(?<=comp-result_)\\d{6}')
  data <- read_json(x)
  if (length(data)<10){
    return(data.frame())
  }
  data <- data[sapply(data, \(x) x$trial_type=='psychophysics')]
  
  data <- rbindlist(data, fill = T)

  data[,subject_id:=str_extract(x, 'study_result_(\\d+)', group = 1)]
  data[,result_id:=str_extract(x, 'comp-result_(\\d+)', group = 1)]
  data <- merge(data, finished_study_ids, by.x = 'subject_id', by.y = 'id')
  
  data
  
}), fill = T))

unlink(paste0(temp_dir, "/*"))
setnafill(data, type = "nocb", cols = c('start_ori','resp_ori','error','trial_number'))

data[,participant:=as.numeric(factor(subject_id, levels = sample(unique(data$subject_id)), labels = 1:length(unique(data$subject_id))))]
data[,c('startDate','endDate','result_id','subject_id','avg_frame_time'):=NULL]
data <- data[seq_type=='stimuli']


data[,abs_err:=abs(error)]
datam <- melt(data[,.(participant, block, trial_index, t1_ori, t2_ori, t3_ori, real_target_position)], measure.vars = patterns('_ori'))
datam[,item_pos:=as.numeric(str_extract( variable,'\\d+'))]
datam <- datam[order(participant, block, trial_index, item_pos)]
datam[,c('diff_to_next','diff_to_prev'):=list(angle_diff_180(value,shift(value, -1)),angle_diff_180(value,shift(value, 1))), by = .(participant, block, trial_index)]
data<-merge(data, datam[real_target_position==item_pos, .(participant, block, trial_index, target_ori = value, diff_to_next, diff_to_prev)], by = c('participant', 'block', 'trial_index'))
data <- drop.empty.cols(data)
data[,N_by_participant:=.N, by = participant]
data <- data[N_by_participant>100]
data <- data[, lapply(.SD, function(col) if (!all(na.omit(col == col[!is.na(col)][1]))) col else NULL)]

fwrite(data[,.(participant, block, trial_number, t1_ori, t2_ori, t3_ori, target_position, cue_type, real_target_position, start_ori, resp_ori, error, abs_err, target_ori, diff_to_next, diff_to_prev)], file = 'temporal_attention.csv')
```

# Instructions

Read the report below and use it as a basis for your presentation. You can also download the preprocessed data from `temporal_attention.csv` and use your favorite software (JASP, jamovi, R, SPSS) to analyze it to get more insight into the study results. The data file has the following columns:

* `participant` - participant identifier (integer: 1-39)
* `block` - experimental block (0-1)
* `trial_number` - trial number within the experiment
* `t1_ori` - orientation of the first Gabor patch (degrees)
* `t2_ori` - orientation of the second Gabor patch (degrees)
* `t3_ori` - orientation of the third Gabor patch (degrees)
* `target_position` - initial cue position (1, 2, or 3), indicating which position was cued before stimulus presentation
* `cue_type` - validity of the cue ("valid", "invalid", or "neutral")
* `real_target_position` - position that was actually tested (1, 2, or 3), indicating the post-cue
* `start_ori` - starting orientation of the response line (degrees)
* `resp_ori` - orientation reported by the participant (degrees)
* `error` - signed error between response and target orientation (degrees)
* `abs_err` - absolute error between response and target orientation (degrees)
* `target_ori` - the actual orientation of the target Gabor patch (degrees)
* `diff_to_next` - angular difference between the target orientation and the orientation of the next item in sequence (degrees)
* `diff_to_prev` - angular difference between the target orientation and the orientation of the previous item in sequence (degrees)

The key questions to address in your analysis include:

1. Does knowing when to attend help? How does cue validity (valid, invalid, neutral) affect orientation judgment accuracy?
2. Can people efficiently reorient their attention? Is there an interaction between the initial cue position and the post-cue position? Perhaps only post-cue matters?
3. Does attention have a refractory period? When attention must be shifted (invalid trials), is there an asymmetry in performance costs between forward shifts (attending to a later item than initially cued) versus backward shifts (attending to an earlier item)?

Feel free to explore other questions as well! 

## Method

### Participants
The study has `r apastats:::numbers2words(data[,lengthu(participant)])` participants. Participation required a web browser with a minimum screen resolution of 1000 × 600 pixels. Demographic information was not collected in the experimental script, but participants were assigned unique identifiers (Prolific ID, study ID, and session ID) to track their data.

### Apparatus and Stimuli
The experiment was programmed using jsPsych 7.3.4 (de Leeuw, 2015) with the psychophysics plugin (version 3.7.0). Stimuli consisted of Gabor patches (sinusoidal gratings with a Gaussian envelope) presented sequentially at the same location. Each Gabor patch had a spatial frequency of 0.05 cycles per pixel, a phase of 90°, a width of 300 pixels, and a contrast parameter of 10. The orientation of each Gabor patch was randomly determined for each trial, ranging from -90° to 90°.

Auditory cues consisted of four sound files: three pure tones at different frequencies (330 Hz, 784 Hz, and 1318 Hz) and one mixed tone combining all three frequencies. Visual displays were presented on a gray background.

### Design
The experiment employed a within-subjects design with the following factors:
- Target position (1, 2, 3): which of the three sequentially presented Gabor patches was the target
- Cue type (neutral, valid, invalid): whether the initial cue validly or invalidly indicated the to-be-remembered target, or provided no specific information

The experiment used a factorial design with 10 repetitions of each condition, resulting in a total of 150 trials (3 target positions × 5 cue conditions × 10 repetitions). The cue conditions were weighted such that valid cues occurred three times more frequently than invalid or neutral cues.

### Procedure
The experiment began with an instruction screen explaining the task, followed by a browser check to ensure minimum screen requirements were met.

Prior to the main experiment, participants completed 15 training trials with gradually decreasing stimulus durations to familiarize themselves with the task.

Each trial began with a fixation cross presented at the center of the screen. After 250 ms, participants heard an auditory cue and simultaneously saw a visual text cue ("1", "2", "3", or "all") indicating which of the upcoming visual patterns would be most important (this is a 'pre-cue'). The high-pitched tone indicated the first pattern, the mid-pitched tone indicated the second pattern, and the low-pitched tone indicated the third pattern. A mixed tone indicated that all patterns were equally important.

Following the cue, three Gabor patches were presented sequentially at the same location, with each patch displayed for 50 ms (during training, this duration started at 400 ms and gradually decreased) and separated by a 250 ms inter-stimulus interval. After all three patterns were presented and a delay of 500 ms, participants heard a second auditory cue (and saw the corresponding visual cue) that indicated which pattern's orientation they needed to report (this is called a 'post-cue').

Participants then used the mouse to adjust the orientation of a response line to match the orientation of the cued Gabor patch. After submitting their response by clicking, participants received feedback in the form of a score based on their accuracy. The score calculation rewarded precise orientation matching, with higher scores for smaller errors and penalties for large errors.

The experiment was divided into two blocks: a training block with 15 trials and a main block with 150 trials. Participants could take breaks between blocks and were provided with feedback about their overall performance.


## Results

### Effect of Cue Type on Accuracy

```{r cue-type-effect}
#| label: fig-cue-type-effect
#| fig-cap: "Effect of cue type on orientation judgment accuracy"

data_descr <- data[,.(.N, acc = mean(abs_err)), keyby = .(participant, cue_type)]

# Run ANOVA for cue type effect
cue_type_anova <- ezANOVA(
  data = data,
  dv = .(abs_err),
  wid = .(participant),
  within = .(cue_type),
  detailed = TRUE,
  type = 3
)

# Plot cue type effect using plot.pointrange with direct parameters
plot.pointrange(data, 
                aes(x = cue_type, y = abs_err), 
                within_subj = TRUE,  
                withinvars = "cue_type",
                wid = "participant",
                pointsize = 3,
                linesize = 1)+labs(
                x = "Cue Type", 
                y = "Absolute Error (degrees)")
```

The effect of cue type on accuracy was analyzed using a within-subject ANOVA with absolute error in orientation judgment as the dependent variable (@fig-cue-type-effect). The results show a clear effect of cue type: `r describe.ezanova(cue_type_anova, 'cue_type')`. On average, participants average absolute error was `r data_descr[,describe.mean.conf(acc), by = .(cue_type)][,paste_and(sprintf('%s with %s cues', V1, cue_type))]` (here and later the confidence intervals are reported in square brackets after the means).


### Effect of Initial Cue and Post-Cue on Accuracy

```{r cue-positions}
#| label: fig-cue-positions
#| fig-cap: "Effect of initial cue position and post-cue position on accuracy"

# For this analysis, target_position is the initial cue and real_target_position is the post-cue
data[, initial_cue := target_position]
data[, post_cue := real_target_position]
data[, position_label := paste0(initial_cue, "→", post_cue)]
data[, position_label := factor(position_label)]
data[,position_label2:=paste0(initial_cue, "-", post_cue)]
# Run ANOVA for position effects (excluding neutral cues)
position_anova <- ezANOVA(
  data = data[cue_type != "neutral"],
  dv = .(abs_err),
  wid = .(participant),
  within = .(initial_cue, post_cue),
  type = 3
)


# Plot the interaction using plot.pointrange
plot.pointrange(data[cue_type != "neutral"], 
                aes(x = initial_cue, y = abs_err, color = post_cue),
                within_subj = TRUE,
                withinvars = c("initial_cue", "post_cue"),
                wid = "participant",
                pointsize = 3,
                linesize = 1)+labs(
                x = "Initial Cue", color = "Post-Cue", 
                y = "Absolute Error (degrees)") 


pre_post <- data[initial_cue=='2'&post_cue!='2'&cue_type != "neutral"]
pre_post_by_subj <- pre_post[,mean.nn(abs_err), by = .(participant, post_cue, cue_type)]
ttest_descr <- describe.ttest(dcast(pre_post_by_subj, participant+cue_type~post_cue, fun=mean)[,t.test(`1`,`3`)])

```

The effects of initial cue position and post-cue position were analyzed using a within-subject ANOVA (@fig-cue-positions). The results showed:

* no significant main effect of initial cue position: `r describe.ezanova(position_anova, 'initial_cue')`
* no significant main effect of post-cue position: `r describe.ezanova(position_anova, 'post_cue')`
* A significant interaction effect: `r describe.ezanova(position_anova, 'initial_cue:post_cue')`

To examine whether performance drops more when people have to report the item at the position after the one that is cued (i.e., if there is a 'refractory' period for attention), we selected the trials where initial cue pointed at the 2nd position and the post-cue to the 1st or the 3rd position. We did not find any significant difference between these positions (`r ttest_descr`). 